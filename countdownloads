#!/usr/bin/env python2.7
#
# By: Jonathan M. Cameron
#
# Copyright (c) 2015 Jonathan M. Cameron
# License: http://www.gnu.org/licenses/gpl-2.0.html GNU/GPL

import os
import time
import datetime
import pytz
import argparse
import sqlite3

db_file_dir = os.environ.get('COUNT_DOWNLOADS_DB_PATH', '.')
database_filename = os.path.join(db_file_dir, 'downloads.db')

# Get the timezone
time_zone = os.environ.get('COUNT_DOWNLOADS_TZONE', 'America/Los_Angeles')
local_tz = pytz.timezone(time_zone)

# Get the time the database file was last modified (before opening it)
db_file_last_modified = datetime.datetime(*(time.gmtime(os.path.getmtime(database_filename)))[:6])
db_file_last_modified_local = db_file_last_modified.replace(tzinfo=pytz.utc).astimezone(local_tz)

# Set up the arguments
parser = argparse.ArgumentParser()

parser.add_argument("--betas", action='store_true', default=False,
                    help="Report alpha, beta, downloads")

args = parser.parse_args()

# Set up the database
conn = sqlite3.connect(database_filename)
cursor = conn.cursor()

# Get the counts of each filename/download
sql = "SELECT filename, COUNT(1) FROM downloads";
if not args.betas:
    sql += " WHERE filename NOT LIKE '%Beta%' AND filename NOT LIKE '%Alpha'"
sql += " GROUP BY filename"
cursor.execute(sql)
result = cursor.fetchall()
counts = [(data[1], data[0]) for data in result]

conn.commit()
conn.close()

# Print out the results
counts = sorted(counts, reverse=True)
print
print "TOTALS: "
for (num, fn) in counts:
    print " %5d %s" % (num, fn)

print
print "Last database update: ", db_file_last_modified_local.strftime('%c %Z')
print
